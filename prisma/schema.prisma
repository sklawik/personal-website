// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"] // Add this line
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ServiceConfig {
  id                  BigInt  @id @unique @default(autoincrement())
  isServiceAccessible Boolean @default(false)
  likes BigInt @default(0)
}

model Post {
  id               BigInt             @id @unique @default(autoincrement())
  content          String
  PostPermsForRole PostPermsForRole[]
}

model User {
  id          BigInt  @id @default(autoincrement())
  password    String
  email       String  @unique
  displayName String?
  roles       Role[]
}

model Role {
  id                BigInt             @id @unique @default(autoincrement())
  name              String
  hexColor          String
  globalPermissions Int                @default(0) // we have global permissions for various things on websites not only specific role
  PostPermsForRole  PostPermsForRole[] // we have role for each permission
  user              User[]
}

model PostPermsForRole {
  postId BigInt @unique
  roleId BigInt @unique
  role   Role   @relation(fields: [roleId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
}

// unlogged 
// 1 - can comment posts
// 2 - can create new posts
// 4 - can react with custom emojis (user can upload their own reaction while reacting to post)
// 8 -  manage other users 
// 16 - delete posts
// 32 - edit posts
// 64 - can do something else
// 128 - can do something else aswell
// 255 - means superuser (can access admin dashboard)
